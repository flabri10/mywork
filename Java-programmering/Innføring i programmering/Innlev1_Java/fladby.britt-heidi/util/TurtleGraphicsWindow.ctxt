#BlueJ class context
comment0.target=TurtleGraphicsWindow()
comment1.params=keyNum
comment1.target=void\ keyPressed(int)
comment10.params=we
comment10.target=void\ windowIconified(WindowEvent)
comment11.params=we
comment11.target=void\ windowOpened(WindowEvent)
comment12.params=steps
comment12.target=void\ bk(int)
comment12.text=\nMove\ the\ turtle\ backwards\ along\ its\ current\ heading.\ \ If\ the\npen\ is\ currently\ in\ the\ DOWN\ position,\ a\ line\ is\ drawn.\n\nAbbreviation\ for\ back().\ \ Both\ spellings\ need\ to\nprovided\ for\ compatibility.\n\n@param\ steps\ Number\ of\ pixels\ (in\ this\ implementation)\ to\ take.\n@see\ \#back\n\n
comment13.params=steps
comment13.target=void\ back(int)
comment13.text=\nMove\ the\ turtle\ backwards\ along\ its\ current\ heading.\ \ If\ the\npen\ is\ currently\ in\ the\ DOWN\ position,\ a\ line\ is\ drawn.\n\nLong\ name\ for\ bk().\ \ Both\ spellings\ need\ to\ provided\ for\ncompatibility.\n\n@param\ steps\ Number\ of\ pixels\ (in\ this\ implementation)\ to\ take.\n@see\ \#bk\n\n
comment14.target=void\ clean()
comment14.text=\nClears\ the\ graphics\ area\ of\ the\ TurtleGraphics\ window.\n\nNote\:\ Clean\ does\ not\ change\ the\ current\ position\ of\nthe\ turtle,\ its\ heading,\ the\ size\ of\ the\ pen\ it\ is\ndrawing\ with\ and/or\ the\ color\ of\ the\ pen\ it\ is\ndrawing\ with.\n\n
comment15.target=int\ colorunder()
comment15.text=\nReturn\ the\ color\ the\ Turtle\ is\ sitting\ on\n\n@see\ \#pencolor\n@see\ \#setpc\n@see\ \#setpencolor\n\n
comment16.target=void\ fill()
comment16.text=\nFill\ a\ bounded\ area\ in\ the\ graphics\ image.\n\nThe\ current\ pixel,\ and\ any\ of\ its\ neighbors\ that\ are\ the\nsame\ color\ as\ it\ (and\ any\ of\ their\ neighbors\ that\ are\ the\nsame\ color\ as\ it,\ etc...)\ are\ changed\ to\ the\ current\ color.\n\n
comment17.params=steps
comment17.target=void\ fd(int)
comment17.text=\nMove\ the\ turtle\ forward\ along\ its\ current\ heading.\ \ If\ the\npen\ is\ currently\ in\ the\ DOWN\ position,\ a\ line\ is\ drawn.\n\nAbbreviation\ for\ forward().\ \ Both\ spellings\ need\ to\nprovided\ for\ compatibility.\n\n@param\ steps\ Number\ of\ pixels\ (in\ this\ implementation)\ to\ take.\n@see\ \#forward\n\n
comment18.params=steps
comment18.target=void\ forward(int)
comment18.text=\nMove\ the\ turtle\ forward\ along\ its\ current\ heading.\ \ If\ the\npen\ is\ currently\ in\ the\ DOWN\ position,\ a\ line\ is\ drawn.\n\nLong\ name\ for\ fd().\ \ Both\ spellings\ need\ to\ provided\ for\ncompatibility.\n\n@param\ steps\ Number\ of\ pixels\ (in\ this\ implementation)\ to\ take.\n@see\ \#fd\n\n
comment19.target=int\ heading()
comment19.text=\nReturn\ the\ Turtle's\ heading\n\n@see\ \#seth\n@see\ \#setheading\n\n
comment2.params=keyNum
comment2.target=void\ keypressed(int)
comment20.target=void\ home()
comment20.text=\nMove\ the\ turtle\ to\ the\ center\ of\ the\ display.\ \ If\ the\npen\ is\ currently\ in\ the\ DOWN\ position,\ a\ line\ is\ drawn.\n\nHome\ is\ equivilent\ to\ setxy(\ 0,\ 0\ )\n\n@see\ \#setxy\n\n
comment21.target=void\ ht()
comment21.text=\nHide\ the\ turtle;\ make\ it\ invisible.\n\nAbbreviation\ for\ hideturtle().\ \ Both\ spellings\ need\ to\nprovided\ for\ compatibility.\n\n@see\ \#hideturtle\n@see\ \#showturtle\n@see\ \#st\n\n
comment22.target=void\ hideturtle()
comment22.text=\nHide\ the\ turtle;\ make\ it\ invisible.\n\nLong\ name\ for\ ht().\ \ Both\ spellings\ need\ to\ provided\ for\ncompatibility.\n\n@see\ \#ht\n@see\ \#showturtle\n@see\ \#st\n\n
comment23.target=boolean\ ispendown()
comment23.text=\nReturn\ the\ current\ status\ of\ the\ pen.\n\nReturn\ true\ if\ the\ turtle's\ pen\ is\ down\ or\nfalse\ if\ it\ in\ the\ up\ position.\n\n@see\ \#pendown\n@see\ \#penup\n@see\ \#pd\n@see\ \#pu\n\n
comment24.params=text
comment24.target=void\ label(String)
comment24.text=\nPaints\ a\ String\ of\ characters\ on\ the\ display.\nThe\ text\ is\ painted\ in\ the\ current\ pen's\ color,\nstarting\ at\ the\ current\ position\ of\ the\ turtle.\n\nThe\ text\ is\ always\ painted\ in\ the\ standard\nhorizontal\ manner,\ i.e.,\ the\ heading\ of\ the\nturtle\ is\ ignored.\n\n@param\ text\ Characters\ to\ be\ painted\ on\ the\ display.\n\n
comment25.params=degrees
comment25.target=void\ left(int)
comment25.text=\nRotate\ the\ turtle\ counterclockwise\ by\ the\ specified\nangle,\ measured\ in\ degrees.\n\n@param\ degrees\ Angle\ to\ change\ turtle's\ heading\ by.\n@see\ \#lt\n\n
comment26.params=degrees
comment26.target=void\ lt(int)
comment26.text=\nRotate\ the\ turtle\ counterclockwise\ by\ the\ specified\nangle,\ measured\ in\ degrees.\n\nAbbreviation\ for\ left().\ \ Both\ spellings\ need\nto\ provided\ for\ compatibility.\n\n@param\ degrees\ Angle\ to\ change\ turtle's\ heading\ by.\n@see\ \#left\n\n
comment27.target=int\ mousex()
comment27.text=\nReturn\ the\ x-coordinate\ where\ last\ mouse\ click\ occured.\n\n@see\ \#mousey\n\n
comment28.target=int\ mousey()
comment28.text=\nReturn\ the\ y-coordinate\ where\ last\ mouse\ click\ occured.\n\n@see\ \#mousex\n\n
comment29.target=void\ pd()
comment29.text=\nPut\ the\ turtle's\ pen\ in\ the\ down\ position.\n\nWhen\ the\ turtle\ moves,\ it\ will\ leave\ a\ trace\ from\ its\ncurrent\ position\ to\ its\ destination\ (its\ new\ position).\n@see\ \#ispendown\n@see\ \#pendown\n@see\ \#pu\n@see\ \#penup\n\n
comment3.target=void\ mouseClicked()
comment30.target=void\ pendown()
comment30.text=\nPut\ the\ turtle's\ pen\ in\ the\ down\ position.\n\nWhen\ the\ turtle\ moves,\ it\ will\ leave\ a\ trace\ from\ its\ncurrent\ position\ to\ its\ destination\ (its\ new\ position).\n@see\ \#ispendown\n@see\ \#pd\n@see\ \#penup\n@see\ \#pu\n\n
comment31.target=void\ penup()
comment31.text=\nPut\ the\ turtle's\ pen\ in\ the\ up\ position.\n\nWhen\ the\ turtle\ moves,\ it\ will\ leave\ no\ trace.\n@see\ \#ispendown\n@see\ \#pd\n@see\ \#pendown\n@see\ \#pu\n\n
comment32.target=void\ pu()
comment32.text=\nPut\ the\ turtle's\ pen\ in\ the\ up\ position.\n\nWhen\ the\ turtle\ moves,\ it\ will\ leave\ no\ trace.\n@see\ \#ispendown\n@see\ \#pd\n@see\ \#pendown\n@see\ \#penup\n\n
comment33.params=size
comment33.target=void\ setlabelheight(int)
comment33.text=\nSet\ the\ size\ of\ the\ text\ displayed\ in\ the\ graphics\ area.\n@see\ \#label\n\n
comment34.target=void\ st()
comment34.text=\nShow\ the\ turtle;\ make\ it\ visible.\n\nAbbreviation\ for\ showturtle().\ \ Both\ spellings\ need\ to\nprovided\ for\ compatibility.\n\n@see\ \#hideturtle\n@see\ \#ht\n@see\ \#showturtle\n\n
comment35.target=void\ showturtle()
comment35.text=\nShow\ the\ turtle;\ make\ it\ visible.\n\nLong\ name\ for\ st().\ \ Both\ spellings\ need\ to\nprovided\ for\ compatibility.\n\n@see\ \#hideturtle\n@see\ \#ht\n@see\ \#st\n\n
comment36.params=new_X
comment36.target=void\ setx(int)
comment36.text=\nMove\ the\ turtle\ to\ an\ absolute\ display\ position.\n\nMove\ the\ turtle\ horizontally\ to\ a\ new\ location\nspecified\ as\ an\ X\ coordinate\ argument.\n@param\ newX\ the\ X-coordinate\ of\ destination.\n@see\ \#home\n@see\ \#setxy\n@see\ \#sety\n\n
comment37.params=new_X\ new_Y
comment37.target=void\ setxy(int,\ int)
comment37.text=\nMove\ the\ turtle\ to\ an\ absolute\ display\ position.\n\nMove\ the\ turtle\ to\ the\ x\ and\ y\ coordinates\ provided\nas\ arguments.\n@param\ newX\ the\ X-coordinate\ of\ destination.\n@param\ newY\ the\ Y-coordinate\ of\ destination.\n@see\ \#home\n@see\ \#setx\n@see\ \#sety\n\n
comment38.params=new_Y
comment38.target=void\ sety(int)
comment38.text=\nMove\ the\ turtle\ to\ an\ absolute\ display\ position.\n\nMove\ the\ turtle\ vertically\ to\ a\ new\ location\nspecified\ as\ an\ Y\ coordinate\ argument.\n@param\ newY\ the\ Y-coordinate\ of\ destination.\n@see\ \#home\n@see\ \#setx\n@see\ \#setxy\n\n
comment39.params=degrees
comment39.target=void\ right(int)
comment39.text=\nRotate\ the\ turtle\ clockwise\ by\ the\ specified\ angle,\nmeasured\ in\ degrees.\n\n@param\ degrees\ Angle\ to\ change\ turtle's\ heading\ by.\n@see\ \#rt\n\n
comment4.target=void\ mouseMoved()
comment40.params=degrees
comment40.target=void\ rt(int)
comment40.text=\nRotate\ the\ turtle\ clockwise\ by\ the\ specified\ angle,\nmeasured\ in\ degrees.\n\nAbbreviation\ for\ right().\ \ Both\ spellings\ need\nto\ provided\ for\ compatibility.\n\n@param\ degrees\ Angle\ to\ change\ turtle's\ heading\ by.\n@see\ \#right\n\n
comment41.params=degrees
comment41.target=void\ seth(int)
comment41.text=\nTurns\ the\ turtle\ to\ the\ specified\ absolute\ heading.\nThe\ heading\ is\ specified\ in\ degrees\ (units\ of\ 1/360th\nof\ a\ circle)\ with\ 0\ being\ North\ (+Y\ axis),\ increasing\nclockwise.\ \ So,\ East\ is\ 90\ degrees,\ South\ is\ 180\ degrees,\nand\ West\ is\ 270\ degrees.\n\nAbbreviation\ for\ setheading().\ \ Both\ spellings\nneed\ to\ provided\ for\ compatibility.\n\n@param\ degrees\ number\ of\ 1/360ths\ increments\ clockwise\nfrom\ the\ positive\ Y\ axis.\n@see\ \#setheading\n\n
comment42.params=degrees
comment42.target=void\ setheading(int)
comment42.text=\nTurns\ the\ turtle\ to\ the\ specified\ absolute\ heading.\nThe\ heading\ is\ specified\ in\ degrees\ (units\ of\ 1/360th\nof\ a\ circle)\ with\ 0\ being\ North\ (+Y\ axis),\ increasing\nclockwise.\ \ So,\ East\ is\ 90\ degrees,\ South\ is\ 180\ degrees,\nand\ West\ is\ 270\ degrees.\n@param\ degrees\ number\ of\ 1/360ths\ increments\ clockwise\nfrom\ the\ positive\ Y\ axis.\n@see\ \#seth\n\n
comment43.params=color_Num
comment43.target=void\ setpc(int)
comment43.text=\nSets\ the\ color\ of\ the\ turtle's\ pen\ to\ the\ supplied\ number.\n@param\ color_Num\ \ numbers\ 0-15\ are\:\n\nNumber\ \ Color\ \ \ \ \ \ \ Number\ \ Color\n------\ \ -------\ \ \ \ \ ------\ \ -------\n0\ \ \ \ black\ \ \ \ \ \ \ \ \ \ 8\ \ \ \ brown\n1\ \ \ \ blue\ \ \ \ \ \ \ \ \ \ \ 9\ \ \ \ tan\n2\ \ \ \ green\ \ \ \ \ \ \ \ \ 10\ \ \ \ forest\n3\ \ \ \ cyan\ \ \ \ \ \ \ \ \ \ 11\ \ \ \ aqua\n4\ \ \ \ red\ \ \ \ \ \ \ \ \ \ \ 12\ \ \ \ salmon\n5\ \ \ \ magenta\ \ \ \ \ \ \ 13\ \ \ \ violet\n6\ \ \ \ yellow\ \ \ \ \ \ \ \ 14\ \ \ \ orange\n7\ \ \ \ white\ \ \ \ \ \ \ \ \ 15\ \ \ \ grey\n\nColor\ numbers\ greater\ than\ 15\ will\ be\ assumed\ to\ be\ RGB\nvalues\ with\ the\ red\ component\ in\ bits\ 16-23,\ the\ green\ncomponent\ in\ bits\ 8-15,\ and\ the\ blue\ component\ in\ bits\n0-7.\ The\ actual\ color\ used\ in\ rendering\ will\ depend\ on\nfinding\ the\ best\ match\ given\ the\ color\ space\ available\nfor\ a\ given\ display.\n@see\ \#setpencolor\n\n
comment44.params=color_Num
comment44.target=void\ setpencolor(int)
comment44.text=\nSets\ the\ color\ of\ the\ turtle's\ pen\ to\ the\ supplied\ number.\n@param\ color_Num\ \ numbers\ 0-15\ are\:\n\nNumber\ \ Color\ \ \ \ \ \ \ Number\ \ Color\n------\ \ -------\ \ \ \ \ ------\ \ -------\n0\ \ \ \ black\ \ \ \ \ \ \ \ \ \ 8\ \ \ \ brown\n1\ \ \ \ blue\ \ \ \ \ \ \ \ \ \ \ 9\ \ \ \ tan\n2\ \ \ \ green\ \ \ \ \ \ \ \ \ 10\ \ \ \ forest\n3\ \ \ \ cyan\ \ \ \ \ \ \ \ \ \ 11\ \ \ \ aqua\n4\ \ \ \ red\ \ \ \ \ \ \ \ \ \ \ 12\ \ \ \ salmon\n5\ \ \ \ magenta\ \ \ \ \ \ \ 13\ \ \ \ violet\n6\ \ \ \ yellow\ \ \ \ \ \ \ \ 14\ \ \ \ orange\n7\ \ \ \ white\ \ \ \ \ \ \ \ \ 15\ \ \ \ grey\n\nColor\ numbers\ greater\ than\ 15\ will\ be\ assumed\ to\ be\ RGB\nvalues\ with\ the\ red\ component\ in\ bits\ 16-23,\ the\ green\ncomponent\ in\ bits\ 8-15,\ and\ the\ blue\ component\ in\ bits\n0-7.\ The\ actual\ color\ used\ in\ rendering\ will\ depend\ on\nfinding\ the\ best\ match\ given\ the\ color\ space\ available\nfor\ a\ given\ display.\n@see\ \#setpencolor\n\n
comment45.params=width
comment45.target=void\ setpensize(int)
comment45.text=\nSets\ the\ width\ of\ the\ turtle's\ pen\ to\ the\ supplied\ number.\n@param\ width\ \ small\ positive\ number;\ 1\ (or\ less)\ results\nin\ a\ single\ pixel\ line.\ increasing\ numbers\ incrementally\nadd\ approximately\ 2\ extra\ pixels\ in\ width\n\n
comment46.target=int\ xcor()
comment46.text=\nReturn\ the\ Turtle's\ X-coordinate\ \n@see\ \#setxy\n@see\ \#setx\n@see\ \#sety\n@see\ \#ycor\n\n
comment47.target=int\ ycor()
comment47.text=\nReturn\ the\ Turtle's\ Y-coordinate\n@see\ \#setxy\n@see\ \#setx\n@see\ \#sety\n@see\ \#xcor\n\n
comment5.params=we
comment5.target=void\ windowActivated(WindowEvent)
comment6.params=we
comment6.target=void\ windowClosed(WindowEvent)
comment7.params=we
comment7.target=void\ windowClosing(WindowEvent)
comment8.params=we
comment8.target=void\ windowDeactivated(WindowEvent)
comment9.params=we
comment9.target=void\ windowDeiconified(WindowEvent)
numComments=48
